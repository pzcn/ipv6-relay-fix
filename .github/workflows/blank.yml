name: Build IPv6 Relay Fix IPK (ARM64)

on:
  push:
    branches: [ master, main ]
    paths:
      - 'Makefile'
      - 'files/**'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'Makefile'
      - 'files/**'
  workflow_dispatch:

# 移除可能导致问题的环境变量
env:
  OPENWRT_VERSION: master

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Fix Python and install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          clang \
          flex \
          bison \
          g++ \
          gawk \
          gcc-multilib \
          g++-multilib \
          gettext \
          git \
          libncurses5-dev \
          libncursesw5-dev \
          libssl-dev \
          python3-setuptools \
          python3-dev \
          python3-distutils \
          rsync \
          unzip \
          zlib1g-dev \
          file \
          wget \
          subversion \
          ccache
        
    - name: Cache OpenWrt source
      id: cache-openwrt
      uses: actions/cache@v4
      with:
        path: openwrt
        key: openwrt-master-arm64-${{ hashFiles('Makefile', 'files/**') }}
        
    - name: Download OpenWrt source
      if: steps.cache-openwrt.outputs.cache-hit != 'true'
      run: |
        git clone --depth 1 https://github.com/openwrt/openwrt.git openwrt
        
    - name: Update feeds
      working-directory: openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Copy package files
      run: |
        mkdir -p openwrt/package/network/ipv6/ipv6-relay-fix
        cp Makefile openwrt/package/network/ipv6/ipv6-relay-fix/
        cp -r files openwrt/package/network/ipv6/ipv6-relay-fix/
        
    - name: Generate config for ARM64
      working-directory: openwrt
      run: |
        # 使用通用的ARM64目标，避免特定的cortex-a53问题
        cat > .config << EOF
        # 使用armvirt目标代替有问题的sunxi/cortex-a53
        CONFIG_TARGET_armvirt=y
        CONFIG_TARGET_armvirt_64=y
        CONFIG_TARGET_armvirt_64_DEVICE_generic=y
        
        # 基础包
        CONFIG_PACKAGE_ipv6-relay-fix=m
        CONFIG_PACKAGE_odhcpd=y
        CONFIG_PACKAGE_kmod-ipv6=y
        
        # IPv6支持
        CONFIG_IPV6=y
        CONFIG_KERNEL_IPV6=y
        
        # 构建设置
        CONFIG_DEVEL=y
        CONFIG_CCACHE=y
        
        # 避免不必要的复杂性
        # CONFIG_ALL_KMODS is not set
        # CONFIG_ALL is not set
        EOF
        
        # 清理环境，确保没有冲突的变量
        unset TARGET_ARCH
        unset ARCH
        
        make defconfig V=s
        
    - name: Clean and prepare build
      working-directory: openwrt
      run: |
        # 清理可能的残留
        make clean || true
        
        # 确保构建工具正确
        make tools/install -j1 V=s
        
    - name: Download dependencies
      working-directory: openwrt
      run: |
        make download -j$(nproc) V=s || make download -j1 V=s
        
    - name: Build toolchain
      working-directory: openwrt
      run: |
        make toolchain/install -j$(nproc) V=s || make toolchain/install -j1 V=s
        
    - name: Build package
      working-directory: openwrt
      run: |
        # 构建单个包，使用详细输出
        make package/ipv6-relay-fix/compile -j1 V=s
        
    - name: Find built package
      id: package
      working-directory: openwrt
      run: |
        PACKAGE_FILE=$(find bin -name "ipv6-relay-fix*.ipk" -type f | head -1)
        
        if [ -z "$PACKAGE_FILE" ]; then
          echo "❌ Package not found!"
          echo "Available packages:"
          find bin -name "*.ipk" | head -10
          exit 1
        fi
        
        PACKAGE_NAME=$(basename "$PACKAGE_FILE")
        echo "✅ Package found: $PACKAGE_NAME"
        
        echo "package_file=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "package_path=$PACKAGE_FILE" >> $GITHUB_OUTPUT
        
        # 创建包信息
        cat > package_info.txt << EOF
        📦 IPv6 Relay Fix Package for ARM64
        
        Package: $PACKAGE_NAME
        Target: armvirt/64 (generic ARM64)
        OpenWrt Version: master
        Built: $(date)
        
        🎯 Compatible with:
        - Generic ARM64 devices
        - Raspberry Pi 4 (64-bit)
        - Other ARMv8-A devices
        
        📥 Installation:
        scp $PACKAGE_NAME root@192.168.1.1:/tmp/
        ssh root@192.168.1.1 "opkg install /tmp/$PACKAGE_NAME"
        
        ⚙️ Configuration:
        uci set ipv6-relay-fix.global.enabled='1'
        uci commit ipv6-relay-fix
        /etc/init.d/ipv6-relay-fix restart
        EOF
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ipv6-relay-fix-arm64-${{ github.run_number }}
        path: |
          openwrt/${{ steps.package.outputs.package_path }}
          openwrt/package_info.txt
        retention-days: 30
        
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          openwrt/${{ steps.package.outputs.package_path }}
          openwrt/package_info.txt
        name: IPv6 Relay Fix ${{ github.ref_name }} (ARM64)
        body: |
          ## IPv6 Relay Fix Package - ARM64
          
          **Target:** armvirt/64 (generic ARM64)  
          **OpenWrt Version:** master  
          **Package:** `${{ steps.package.outputs.package_file }}`
          
          ### 🎯 Compatible Devices
          - Generic ARM64 devices
          - Raspberry Pi 4 (64-bit)
          - Other ARMv8-A devices
          
          ### 📥 Installation
          ```
          scp ${{ steps.package.outputs.package_file }} root@192.168.1.1:/tmp/
          ssh root@192.168.1.1 "opkg install /tmp/${{ steps.package.outputs.package_file }}"
          uci set ipv6-relay-fix.global.enabled='1'
          uci commit ipv6-relay-fix
          /etc/init.d/ipv6-relay-fix restart
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
