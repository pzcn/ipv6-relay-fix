name: Build IPv6 Relay Fix IPK (ARM Cortex-A53)

on:
  push:
    branches: [ master, main ]
    paths:
      - 'Makefile'
      - 'files/**'
  pull_request:
    branches: [ master, main ]
    paths:
      - 'Makefile'
      - 'files/**'
  workflow_dispatch:

env:
  OPENWRT_VERSION: master
  TARGET_ARCH: aarch64_cortex-a53

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用22.04避免Python 3.12问题
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Fix Python and install comprehensive dependencies
      run: |
        echo "🔧 Installing comprehensive build dependencies..."
        sudo apt-get update
        
        # 根据搜索结果[2]的完整依赖列表
        sudo apt-get install -y \
          build-essential \
          clang \
          flex \
          bison \
          g++ \
          gawk \
          gcc-multilib \
          g++-multilib \
          gettext \
          git \
          libncurses5-dev \
          libncursesw5-dev \
          libssl-dev \
          python3-setuptools \
          python3-dev \
          rsync \
          swig \
          unzip \
          zlib1g-dev \
          file \
          wget \
          subversion \
          time \
          xsltproc \
          libelf-dev \
          ccache \
          ecj \
          fastjar \
          java-propose-classpath
          
        # 根据搜索结果[4]，处理Python distutils问题
        # 对于Ubuntu 22.04，需要安装python3-distutils
        sudo apt-get install -y python3-distutils || {
          echo "⚠️ python3-distutils not available, installing setuptools as alternative"
          pip3 install setuptools
        }
        
        echo "✅ Dependencies installed successfully"
        
    - name: Verify Python setup
      run: |
        echo "🐍 Checking Python setup..."
        python3 --version
        python3 -c "import distutils" && echo "✅ distutils available" || {
          echo "⚠️ distutils not available, trying setuptools"
          python3 -c "import setuptools" && echo "✅ setuptools available" || {
            echo "❌ Neither distutils nor setuptools available"
            exit 1
          }
        }
        
    - name: Cache OpenWrt source
      id: cache-openwrt
      uses: actions/cache@v4
      with:
        path: openwrt
        key: openwrt-master-aarch64-cortex-a53-${{ hashFiles('Makefile', 'files/**') }}
        
    - name: Download OpenWrt source
      if: steps.cache-openwrt.outputs.cache-hit != 'true'
      run: |
        echo "📥 Downloading OpenWrt source..."
        git clone --depth 1 https://github.com/openwrt/openwrt.git openwrt
        
    - name: Update feeds with error handling
      working-directory: openwrt
      run: |
        echo "🔄 Updating feeds..."
        ./scripts/feeds update -a || {
          echo "⚠️ Feed update failed, retrying..."
          sleep 5
          ./scripts/feeds update -a
        }
        
        ./scripts/feeds install -a || {
          echo "⚠️ Feed install failed, retrying..."
          sleep 5
          ./scripts/feeds install -a
        }
        
    - name: Verify package structure and copy files
      run: |
        echo "📁 Verifying package structure..."
        ls -la
        
        if [ ! -f "Makefile" ]; then
          echo "❌ Makefile not found!"
          exit 1
        fi
        
        if [ ! -d "files" ]; then
          echo "❌ files directory not found!"
          exit 1
        fi
        
        echo "📋 Creating OpenWrt package structure..."
        mkdir -p openwrt/package/network/ipv6/ipv6-relay-fix
        cp Makefile openwrt/package/network/ipv6/ipv6-relay-fix/
        cp -r files openwrt/package/network/ipv6/ipv6-relay-fix/
        
        echo "✅ Package structure created"
        
    - name: Generate minimal config and fix prereqs
      working-directory: openwrt
      run: |
        echo "⚙️ Generating build configuration..."
        
        # 生成最小配置，专注于包编译
        cat > .config << EOF
        CONFIG_TARGET_sunxi=y
        CONFIG_TARGET_sunxi_cortexa53=y
        CONFIG_TARGET_sunxi_cortexa53_DEVICE_sun50i-a64-pine64-plus=y
        CONFIG_PACKAGE_ipv6-relay-fix=m
        CONFIG_PACKAGE_odhcpd=y
        CONFIG_PACKAGE_kmod-ipv6=y
        CONFIG_IPV6=y
        CONFIG_KERNEL_IPV6=y
        CONFIG_DEVEL=y
        CONFIG_CCACHE=y
        EOF
        
        # 使用FORCE=1跳过严格的依赖检查（如果需要）
        echo "🔧 Running defconfig with verbose output..."
        make defconfig V=s || {
          echo "⚠️ defconfig failed, trying with FORCE=1..."
          make defconfig V=s FORCE=1
        }
        
    - name: Prepare build environment
      working-directory: openwrt
      run: |
        echo "🔧 Preparing build environment..."
        
        # 清理可能的构建残留
        make clean || true
        
        # 重新构建config工具（针对搜索结果[1]中的类似问题）
        make tools/install -j1 V=s || {
          echo "⚠️ Tools build failed, cleaning and retrying..."
          make dirclean
          make tools/install -j1 V=s
        }
        
    - name: Download dependencies with retry
      working-directory: openwrt
      run: |
        echo "📥 Downloading package sources..."
        make download -j$(nproc) V=s || {
          echo "⚠️ Download failed, retrying with single thread..."
          make download -j1 V=s
        }
        
    - name: Build toolchain
      working-directory: openwrt
      run: |
        echo "🔨 Building toolchain..."
        make toolchain/install -j$(nproc) V=s || {
          echo "⚠️ Toolchain build failed, retrying with single thread..."
          make toolchain/install -j1 V=s
        }
        
    - name: Build package with verbose output
      working-directory: openwrt
      run: |
        echo "📦 Building IPv6 relay fix package..."
        make package/ipv6-relay-fix/compile -j$(nproc) V=s || {
          echo "⚠️ Package build failed, retrying with single thread and verbose output..."
          make package/ipv6-relay-fix/compile -j1 V=sc
        }
        
    - name: Find and verify package
      id: package
      working-directory: openwrt
      run: |
        echo "🔍 Searching for built package..."
        PACKAGE_FILE=$(find bin -name "ipv6-relay-fix*.ipk" -type f | head -1)
        
        if [ -z "$PACKAGE_FILE" ]; then
          echo "❌ Package not found! Available files:"
          find bin -name "*.ipk" -ls || echo "No IPK files found"
          exit 1
        fi
        
        PACKAGE_NAME=$(basename "$PACKAGE_FILE")
        echo "✅ Package found: $PACKAGE_NAME"
        
        echo "package_file=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "package_path=$PACKAGE_FILE" >> $GITHUB_OUTPUT
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ipv6-relay-fix-aarch64-cortex-a53-${{ github.run_number }}
        path: openwrt/${{ steps.package.outputs.package_path }}
        retention-days: 30
